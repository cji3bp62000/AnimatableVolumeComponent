// <auto-generated />

using System;
using System.Collections.Generic;
using UnityEngine;

namespace TsukimiNeko.AnimatableVolumeComponent
{
    public static partial class AnimatableVolumeComponentMapping
    {
#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#endif
        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
        public static void InitializeMap()
        {
            Map[typeof(UnityEngine.Rendering.Universal.Bloom)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableBloom);
            Map[typeof(UnityEngine.Rendering.Universal.ChannelMixer)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableChannelMixer);
            Map[typeof(UnityEngine.Rendering.Universal.ChromaticAberration)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableChromaticAberration);
            Map[typeof(UnityEngine.Rendering.Universal.ColorAdjustments)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableColorAdjustments);
            Map[typeof(UnityEngine.Rendering.Universal.ColorCurves)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableColorCurves);
            Map[typeof(UnityEngine.Rendering.Universal.ColorLookup)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableColorLookup);
            Map[typeof(UnityEngine.Rendering.Universal.DepthOfField)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableDepthOfField);
            Map[typeof(UnityEngine.Rendering.Universal.FilmGrain)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableFilmGrain);
            Map[typeof(UnityEngine.Rendering.Universal.LensDistortion)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableLensDistortion);
            Map[typeof(UnityEngine.Rendering.Universal.LiftGammaGain)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableLiftGammaGain);
            Map[typeof(UnityEngine.Rendering.Universal.MotionBlur)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableMotionBlur);
            Map[typeof(UnityEngine.Rendering.Universal.PaniniProjection)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatablePaniniProjection);
            Map[typeof(UnityEngine.Rendering.Universal.ShadowsMidtonesHighlights)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableShadowsMidtonesHighlights);
            Map[typeof(UnityEngine.Rendering.Universal.SplitToning)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableSplitToning);
            Map[typeof(UnityEngine.Rendering.Universal.Tonemapping)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableTonemapping);
            Map[typeof(UnityEngine.Rendering.Universal.Vignette)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableVignette);
            Map[typeof(UnityEngine.Rendering.Universal.WhiteBalance)] = typeof(TsukimiNeko.AnimatableVolumeComponent.AnimatableWhiteBalance);
        }
    }
}
